name: Generate ISO
description: Creates an ISO for installing an OSTree container to a system

inputs:
  arch:
    description: Architecture for image to build
    default: x86_64
  image-name:
    description: Name of the source container image
    required: true
  version:
    description: Fedora version of installer to build
    required: true
  image-repo:
    description: Repository of the source container image
    required: true
  image-tag:
    description: Tag of the source container image
    required: true
  use-web-installer:
    description: Enable Anaconda web installer
    default: false

runs:
  using: composite
  env:
    MAKEFILE_ARGS: ARCH=${{ inputs.arch }} VERSION=${{ inputs.version }} IMAGE_NAME=${{ inputs.image-name }} IMAGE_REPO=${{ inputs.image-repo }} IMAGE_TAG=${{ inputs.image-tag }} USE_WEB_INSTALLER=${{ inputs.use-web-installer }}
  steps:
    - name: Build image
      shell: bash
      run: |
        docker build -t isogenerator:local -f Dockerfile .

    - name: Download image
      shell: bash
      run: |
        docker run --rm --privileged \
          --volume .:/isogenerator/output \
          -e IMAGE_NAME -e IMAGE_REPO -e IMAGE_TAG -e ARCH -e VERSION -e USE_WEB_INSTALLER \
          isogenerator:local \
          bash -c 'make container/${IMAGE_NAME}-${IMAGE_TAG} ${MAKEFILE_ARGS}'

    - name: Create boot.iso
      shell: bash
      env:
      run: |
        docker run --rm --privileged \
          --volume .:/isogenerator/output \
          -e IMAGE_NAME -e IMAGE_REPO -e IMAGE_TAG -e ARCH -e VERSION -e USE_WEB_INSTALLER \
          isogenerator:local \
          bash -c 'make boot.iso ${MAKEFILE_ARGS}'

    - name: Create deploy.iso
      shell: bash
      env:
      run: |
        docker run --rm --privileged \
          --volume .:/isogenerator/output \
          -e IMAGE_NAME -e IMAGE_REPO -e IMAGE_TAG -e ARCH -e VERSION -e USE_WEB_INSTALLER \
          isogenerator:local \
          bash -c 'make ${IMAGE_NAME}-${IMAGE_TAG}-${ARCH}-${VERSION}.iso ${MAKEFILE_ARGS}'
        mkdir output
        mv ${IMAGE_NAME}-${IMAGE_TAG}-${ARCH}-${VERSION}.iso output/

    - name: Upload ISO
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.image-name }}-${{ inputs.image-tag }}-${{ inputs.arch }}-${{ inputs.version }}-iso
        path: output/*.iso
