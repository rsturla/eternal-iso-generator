name: Generate ISO
description: Creates an ISO for installing an OSTree container to a system

inputs:
  arch:
    description: Architecture for image to build
    default: x86_64
  image-name:
    description: Name of the source container image
    required: true
  version:
    description: Fedora version of installer to build
    required: true
  image-repo:
    description: Repository of the source container image
    required: true
  image-tag:
    description: Tag of the source container image
    required: true
  use-web-installer:
    description: Enable Anaconda web installer
    default: false
  secureboot-key-url:
    description: URL pointing to the SecureBoot public key
    required: false
  secureboot-password:
    description: The password to enroll SecureBoot keys on machines
    required: false

outputs:
  output-path:
    value: ${{ steps.create.outputs.OUTPUT_PATH }}
  iso-path: 
    value: ${{ steps.create.outputs.ISO_PATH }}
  checksum-path: 
    value: ${{ steps.checksum.outputs.CHECKSUM_PATH }}  

runs:
  using: composite
  steps:
    - name: Optimize GHA Storage
      uses: rsturla/eternal-main/.github/actions/optimise-gha-storage@main

    - name: Build image
      shell: bash
      run: |
        docker build -t isogenerator:local -f ${{ github.action_path }}/Dockerfile ${{ github.action_path }}

    - name: Create ISO
      shell: bash
      id: create
      env:
        IMAGE_NAME: ${{ inputs.image-name }}
        IMAGE_REPO: ${{ inputs.image-repo }}
        IMAGE_TAG: ${{ inputs.image-tag }}
        ARCH: ${{ inputs.arch }}
        VERSION: ${{ inputs.version }}
        USE_WEB_INSTALLER: ${{ inputs.use-web-installer }}
        SECUREBOOT_URL: ${{ inputs.secureboot-key-url }}
        SECUREBOOT_PASSWORD: ${{ inputs.secureboot-password }}
      run: |
        mkdir -p output
        docker run --rm --privileged \
          --volume ./output:/isogenerator/output \
          -e IMAGE_NAME -e IMAGE_REPO -e IMAGE_TAG -e ARCH -e VERSION -e USE_WEB_INSTALLER \
          isogenerator:local \
          bash -c 'make output/${IMAGE_NAME}-${IMAGE_TAG}.iso \
            ARCH=${ARCH} \
            VERSION=${VERSION} \
            IMAGE_NAME=${IMAGE_NAME} \
            IMAGE_REPO=${IMAGE_REPO} \
            IMAGE_TAG=${IMAGE_TAG} \
            USE_WEB_INSTALLER=${USE_WEB_INSTALLER}'
          mv output/${IMAGE_NAME}-${IMAGE_TAG}.iso output/${IMAGE_NAME}-${IMAGE_TAG}-${ARCH}.iso
          echo "OUTPUT_PATH=$(realpath ./output)" >> $GITHUB_OUTPUT
          echo "ISO_PATH=$(realpath ./output/${IMAGE_NAME}-${IMAGE_TAG}-${ARCH}.iso)" >> $GITHUB_OUTPUT

    - name: Create checksums
      shell: bash
      id: checksum
      env:
        ISO_PATH: ${{ steps.create.outputs.ISO_PATH }}
        IMAGE_NAME: ${{ inputs.image-name }}
        IMAGE_TAG: ${{ inputs.image-tag }}
        ARCH: ${{ inputs.arch }}
      run: |
        sha256sum ./output/${IMAGE_NAME}-${IMAGE_TAG}-${ARCH}.iso > ./output/${IMAGE_NAME}-${IMAGE_TAG}-${ARCH}-checksum
        echo "CHECKSUM_PATH=$(realpath ./output/${IMAGE_NAME}-${IMAGE_TAG}-${ARCH}-checksum)" >> $GITHUB_OUTPUT
